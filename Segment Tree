void build_tree(ll id, ll l, ll r){
    if (l == r){
        s[id] = \\ value \\
        return;
    }
    ll m = (l + r) / 2;
    build_tree(id * 2, l, m);
    build_tree(id * 2 + 1, m + 1, r);
    s[id] = \\ queries \\
    return;
}
void update(ll id, ll l, ll r, ll i, ll v){
    if (i < l || i > r) return;
    if (l == r){
        s[id] = v;
        return;
    }
    ll m = (l + r) / 2;
    update(id * 2, l, m, i, v);
    update(id * 2 + 1, m + 1, r, i, v);
    s[id] = \\ queries \\
    return;
}
ll get(ll id, ll l, ll r, ll u, ll v){
    if (u > r || v < l) return 0;
    if (u <= l && r <= v){
        return s[id];
    }
    ll m = (l + r) / 2;
    return get(id * 2, l, m, u, v) \\ queries \\ get (id * 2 + 1, m + 1, r, u, v)
}
