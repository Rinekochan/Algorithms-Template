void dfs(ll node, ll par){
    h[node] = h[par] + 1;
    T[node][0] = par;
    dist[node] = dist[par] + node;
    for (int i = 1; i < 17; i++){
        T[node][1] = T[T[node][i - 1]][i - 1];
    }
    for (auto v : adj[node]){
        if (v == par) continue;
        dfs(v, node);
    }
}
ll lca(int u, int v){
    if (h[u] < h[v]) swap(u, v);
    for (int i = 16; i >= 0; i--){
        if (h[T[u][i]] >= h[v]) u = T[u][i];
    }
    if (u == v) return u;
    for (int i = 16; i >= 0; i--){
        if (T[u][i] != T[v][i]){
            u = T[u][i];
            v = T[v][i];
        }
        return T[u][0];
    }
}
