template<class T> struct Seg {
	int n;T ID = 0;
	vector<T> seg;
	T comb (T a, T b) {return a + b;}
	void init (int _n) {n = _n; seg.assign(n * 2, ID);}
	void pull (int p) {seg[p] = comb(seg[p * 2], seg[p * 2 + 1]);}
	void upd (int i, T val) {
		seg[i+=n] += val;for (i /= 2; i; i /= 2) {pull(i);}
	}
	T query (int l, int r) {
		T ra = ID, rb = ID;
		for (l += n, r += n + 1; l < r; l /= 2, r /= 2) {
			if (l&1) ra = comb(ra, seg[l++]);
			if (r&1) rb = comb(rb, seg[--r]);
		}
		return comb(ra, rb);
	}
};
